// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-fetch";
import type {
  ExecutionsListExecutionsData,
  ExecutionsListExecutionsResponse,
  ExecutionsListExecutionsError,
  ExecutionsGetExecutionData,
  ExecutionsGetExecutionResponse,
  ExecutionsGetExecutionError,
  ExecutionsGetExecutionResultData,
  ExecutionsGetExecutionResultResponse,
  ExecutionsGetExecutionResultError,
  ExecutionsGetExecutionResultDatasetsData,
  ExecutionsGetExecutionResultDatasetsResponse,
  ExecutionsGetExecutionResultDatasetsError,
  UtilsHealthCheckData,
  UtilsHealthCheckResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * List Executions
 * List the most recent executions
 */
export const executionsListExecutions = <ThrowOnError extends boolean = false>(
  options?: Options<ExecutionsListExecutionsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    ExecutionsListExecutionsResponse,
    ExecutionsListExecutionsError,
    ThrowOnError
  >({
    url: "/api/v1/executions/",
    ...options,
  });
};

/**
 * Get Execution
 * Inspect a specific execution
 */
export const executionsGetExecution = <ThrowOnError extends boolean = false>(
  options: Options<ExecutionsGetExecutionData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ExecutionsGetExecutionResponse,
    ExecutionsGetExecutionError,
    ThrowOnError
  >({
    url: "/api/v1/executions/{execution_id}",
    ...options,
  });
};

/**
 * Get Execution Result
 * Inspect a specific execution result
 */
export const executionsGetExecutionResult = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ExecutionsGetExecutionResultData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ExecutionsGetExecutionResultResponse,
    ExecutionsGetExecutionResultError,
    ThrowOnError
  >({
    url: "/api/v1/executions/{execution_id}/result/{result_id}",
    ...options,
  });
};

/**
 * Get Execution Result Datasets
 * Query the datasets that were used for a specific execution
 */
export const executionsGetExecutionResultDatasets = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ExecutionsGetExecutionResultDatasetsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    ExecutionsGetExecutionResultDatasetsResponse,
    ExecutionsGetExecutionResultDatasetsError,
    ThrowOnError
  >({
    url: "/api/v1/executions/{execution_id}/result/{result_id}/datasets",
    ...options,
  });
};

/**
 * Health Check
 */
export const utilsHealthCheck = <ThrowOnError extends boolean = false>(
  options?: Options<UtilsHealthCheckData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    UtilsHealthCheckResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/v1/utils/health-check/",
    ...options,
  });
};
