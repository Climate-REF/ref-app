// This file is auto-generated by @hey-api/openapi-ts

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const MetricExecutionSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        latest_result: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/MetricExecutionResult'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['id', 'latest_result'],
    title: 'MetricExecution'
} as const;

export const MetricExecutionResultSchema = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        metric_execution_id: {
            type: 'integer',
            title: 'Metric Execution Id'
        },
        dataset_hash: {
            type: 'string',
            title: 'Dataset Hash'
        },
        successful: {
            type: 'boolean',
            title: 'Successful'
        }
    },
    type: 'object',
    required: ['id', 'metric_execution_id', 'dataset_hash', 'successful'],
    title: 'MetricExecutionResult'
} as const;

export const MetricExecutionsSchema = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/MetricExecution'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'MetricExecutions'
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;